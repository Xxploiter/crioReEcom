<?php

class SyncService
{
    // about the getLedgerDataFromAPI function this gets data from the api the cache time is one day
    private function getUpdateStatus($productClass)
    {

        $apiData = file_get_contents('https://raiganj.crio77.com/api/checkUpdate.php');
        // Perform data processing, if necessary
        $processedJSONData = json_decode($apiData, true);
        // parse the data and check which needs to be synchronized item, size, brand or color
        $itemLastCrioId = $processedJSONData->itemCount;
        $sizeLastCrioId = $processedJSONData->sizeCount;
        $colorLastCrioId = $processedJSONData->colorCount;
        $brandLastCrioId = $processedJSONData->brandCount;
        // getting the local database data 
        $itemLastData = $productClass->productsLastCrioId();
        $sizeLastData = $productClass->sizesLastCrioId();
        $colorLastData = $productClass->colorLastCrioId();
        $brandLastData = $productClass->brandsLastCrioId();
        
        // now lets check wther there is a need for syn or not, by subtracting 
       $itemUpdate = $itemLastCrioId - $itemLastData;
       $sizeUpdate = $sizeLastCrioId - $sizeLastData;
       $colorUpdate = $colorLastCrioId - $colorLastData;
       $brandUpdate = $brandLastCrioId - $brandLastData;
      
        return array($itemUpdate,$sizeUpdate,$colorUpdate,$brandUpdate);
    }
    private function syncItem($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($itemSync > 0){
            // here need to wtite the code for getting all the data after a specific id from an API TODO
            // IMP
            // this can be abstracted using a method where each item is passed inside foreach
            // IMP......
            //  after that the data returned will be passed to a method in product Model TODO synchronizeProductCrio($data)
        }
    }
    private function syncSize($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($sizeSync > 0){

        }
    }
    private function syncColor($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($colorSync > 0){

        }
    }
    private function syncBrand($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($brandSync > 0){

        }
    }
    
    public function syncAll(){
        // here call all the sync private methods  
    }

   
}
