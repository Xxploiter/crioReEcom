<?php

class SyncService
{
    // about the getLedgerDataFromAPI function this gets data from the api the cache time is one day
    private function getUpdateStatus($productClass)
    {

        $apiData = file_get_contents('https://raiganj.crio77.com/api/updateStatus.php');
        // Perform data processing, if necessary
        $processedJSONData = json_decode($apiData, true);
        // parse the data and check which needs to be synchronized item, size, brand or color
        $itemStatus = $processedJSONData[0]->item;
        $brandStatus = $processedJSONData[0]->brand;
        $sizeStatus = $processedJSONData[0]->size;
        $colorStatus = $processedJSONData[0]->color;
        // getting the local database data 
        $sizeLastData = $productClass->totalSizeCount();
        $colorLastData = $productClass->totalColorCount();
        $itemLastData = $productClass->totalProductsCount();
        $brandLastData = $productClass->totalBrandsCount();
        
        // now lets check wther there is a need for syn or not, by subtracting 
       $itemUpdate = $itemStatus - $itemLastData;
       $sizeUpdate = $sizeStatus - $sizeLastData;
       $colorUpdate = $colorStatus - $colorLastData;
       $brandUpdate = $brandStatus - $brandLastData;
      
        return array($itemUpdate,$sizeUpdate,$colorUpdate,$brandUpdate);
    }
    private function syncItem($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($itemSync > 0){
            // here need to wtite the code for getting all the data after a specific id from an API TODO
            // IMP
            // this can be abstracted using a method where each item is passed inside foreach
            // IMP
            //  after that the data returned will be passed to a method in product Model TODO synchronizeProductCrio($data)
        }
    }
    private function syncSize($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($sizeSync > 0){

        }
    }
    private function syncColor($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($colorSync > 0){

        }
    }
    private function syncBrand($productClass){
        [$itemSync, $sizeSync, $colorSync, $brandSync] = $this->getUpdateStatus($productClass);
        if($brandSync > 0){

        }
    }
    
    public function syncAll(){
        // here call all the sync private methods  
    }

   
}
